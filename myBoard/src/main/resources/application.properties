# DB연결 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/eundb
spring.datasource.username=root
spring.datasource.password=root

# mybatis 설정 (자동매핑처리) 
mybatis.config=mybatis/mybatis-config.xml
mybatis.mapper-locations=mybatis/mapper/*.xml

#jpa 
spring.jpa.show-sql=true
spring.jpa.database=h2
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

# thymeleaf 설정(사용안함)
spring.thymeleaf.enabled=false
spring.freemarker.cache=false


# 서버 재가동 필요없이 새로고침만으로 jsp 반영 
spring.thymeleaf.cache=false

# 애플리케이션 포트 설정
server.port=9000

# 로깅 설정 
logging.level.root=info

#view resolver 설정 
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

# spring devTools (jsp, css 새로고침없이 바로 적용) 
spring.devtools.livereload.enabled=true

#jsp 수정 시 서버 재시작 없이 바로 적용  
server.servlet.jsp.init-parameters.development=true

# multipartResolver file 업로드 용량
#spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
 
# exception 발생 시, 스프링부트가 제공하는 기본 에러페이지 노출여부
server.error.whitelabel.enabled=false	
#오류응답을 처리할 핸들러 경로
server.error.path= /error  
#오류 응답에 exception의 내용을 포함할지 여부
server.error.include-exception=TRUE
server.error.include-stacktrace: always











# 로깅 레벨 설정
#logging.level.org.springframework=debug
#logging.level.org.springframework.web=debug

# 리소스 스태틱에 넣어야 인식
#spring.mvc.static-path-pattern=/resources/**

#mariadbs 
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC

#oracle
#spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
#spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1532/test

